# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

backend/data/votes.json
backend/__pycache__/
backend/data/voter_sessions.json
backend/.env
backend/config.py

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff (if you add Django later, though unlikely for this Flask app)
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff
instance/
.webassets-cache

# Scrapy stuff
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# IDEs
# PyCharm
.idea/
# Visual Studio Code
.vscode/
# Sublime Text
*.sublime-project
*.sublime-workspace
# Vim
*.swp
*.swo
# Emacs
*~
\#*\#

# OS generated files
# Windows
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/
Windows/SMSTSLog/
# Linux
*~
.fuse_hidden*
.directory
.Trash-*
*.Trash-*
.nfs*
# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon?
._*
.Spotlight-V100
.Trashes
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Data files (specific to your project)
# If you stick with JSON files for data, ignore them for security/privacy
# You might want to commit initial/seed data files like candidates.json, but not user-generated ones.
# Adjust these lines based on what data files you have and want to ignore.
api/votes.json
api/election_status.json # You might want to commit an initial version of this, but ignore changes after deployment
# api/results.json # If you generate this, ignore it
# api/logs/ # If you add a logs directory

# Log files (adjust if your logs go elsewhere)
*.log

# Temporary files
tmp/
temp/

# Environment variable files (containing secrets)
.env
.env.local
.env.*.local

# Ignore compiled JavaScript if you add a build step later (e.g., minification)
# frontend/main.min.js
# frontend/api.min.js

# Ignore node_modules if you use npm for frontend dependencies (unlikely for this simple setup)
node_modules/

# Ignore API documentation or generated files if applicable
apidocs/
